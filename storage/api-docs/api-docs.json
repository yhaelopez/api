{
    "openapi": "3.0.0",
    "info": {
        "title": "My API Project",
        "description": "My API documentation. Most services require API authentication. Use Bearer token for authorization.",
        "termsOfService": "Commercial",
        "contact": {
            "email": "support@myapp.com"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/api/v1/admins": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Display a listing of admins",
                "operationId": "df91b201d4237ddff79f52e404df75f1",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search term for name or email",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "maxLength": 255
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by verification status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "verified",
                                "pending"
                            ]
                        }
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "Field to sort by",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "name",
                                "email",
                                "created_at",
                                "updated_at"
                            ]
                        }
                    },
                    {
                        "name": "sort_direction",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    },
                    {
                        "name": "with_inactive",
                        "in": "query",
                        "description": "Include soft-deleted admins",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "only_inactive",
                        "in": "query",
                        "description": "Show only soft-deleted admins",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminCollection"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "Store a newly created admin",
                "operationId": "9d9ca69097a019e5b2bb3a79407a9f91",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AdminStoreRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Admin created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/admins/{id}": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Display the specified admin",
                "operationId": "024763a0221de3238db7ec5d8f899fab",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Admin ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Admin not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Admin"
                ],
                "summary": "Update the specified admin",
                "operationId": "ed5acd6c191964f67a9d431318ff7741",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Admin ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AdminUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Admin updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "404": {
                        "description": "Admin not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Admin"
                ],
                "summary": "Remove the specified admin",
                "operationId": "f72a44a5a6c6d9d1fd7c38a16fab782b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Admin ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Admin deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Admin deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Admin not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/admins/{id}/restore": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "Restore a soft-deleted admin",
                "operationId": "71dead148f496491c5dd35cd1d5faad4",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Admin ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Admin restored successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Admin not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/admins/{id}/force-delete": {
            "delete": {
                "tags": [
                    "Admin"
                ],
                "summary": "Permanently delete an admin",
                "operationId": "772cede229872696bbb69730a0e488a4",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Admin ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Admin permanently deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Admin permanently deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Cannot force delete active admin"
                    },
                    "404": {
                        "description": "Admin not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/admins/{id}/profile-photo": {
            "delete": {
                "tags": [
                    "Admin"
                ],
                "summary": "Remove admin profile photo",
                "operationId": "f226d74a16c1f9573c22aa967c85f053",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Admin ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Profile photo removed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Profile photo removed successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Admin not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/admins/{id}/send-password-reset": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "Send password reset link to admin",
                "operationId": "b62bfaf82937750731568bf54b983344",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Admin ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Password reset link sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Password reset link sent successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Admin not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/artists": {
            "get": {
                "tags": [
                    "Artist"
                ],
                "summary": "Display a listing of artists",
                "operationId": "13a1f35299e05a59c69cfe22dd89e2d5",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ArtistCollection"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Artist"
                ],
                "summary": "Store a newly created artist",
                "operationId": "2fa6203e506e3794471a2f9ec57740a9",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Radiohead"
                                    },
                                    "spotify_id": {
                                        "description": "Optional Spotify artist ID",
                                        "type": "string",
                                        "example": "0TnOYISbd1XYRBk9myaseg"
                                    },
                                    "owner_id": {
                                        "description": "Optional user ID to assign as owner (Admin only)",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "temp_folder": {
                                        "description": "Optional temporary folder name from FilePond upload",
                                        "type": "string",
                                        "example": "uuid-string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Artist created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ArtistResource"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/artists/{artist}": {
            "get": {
                "tags": [
                    "Artist"
                ],
                "summary": "Display the specified artist",
                "operationId": "16bac8b71684b5b4bbf3fa88d8757b67",
                "parameters": [
                    {
                        "name": "artist",
                        "in": "path",
                        "description": "Artist ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ArtistResource"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Artist not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Artist"
                ],
                "summary": "Update the specified artist",
                "operationId": "a7404403d79091d4fb73bac1f7808da3",
                "parameters": [
                    {
                        "name": "artist",
                        "in": "path",
                        "description": "Artist ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Radiohead"
                                    },
                                    "spotify_id": {
                                        "description": "Optional Spotify artist ID",
                                        "type": "string",
                                        "example": "0TnOYISbd1XYRBk9myaseg"
                                    },
                                    "temp_folder": {
                                        "description": "Optional temporary folder name from FilePond upload",
                                        "type": "string",
                                        "example": "uuid-string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Artist updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ArtistResource"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Artist not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Artist"
                ],
                "summary": "Delete the specified artist",
                "operationId": "90ce4e904084d6442ad63e907839d1ec",
                "parameters": [
                    {
                        "name": "artist",
                        "in": "path",
                        "description": "Artist ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Artist deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Artist not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/artists/{artist}/restore": {
            "post": {
                "tags": [
                    "Artist"
                ],
                "summary": "Restore the specified soft-deleted artist",
                "operationId": "2cf4edf321a1be389174c76c9753ef74",
                "parameters": [
                    {
                        "name": "artist",
                        "in": "path",
                        "description": "Artist ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Artist restored",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Artist restored"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/ArtistResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Artist not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/artists/{artist}/force-delete": {
            "delete": {
                "tags": [
                    "Artist"
                ],
                "summary": "Permanently delete the specified artist",
                "operationId": "ecb0cd2c401d78721647a864e31687fb",
                "parameters": [
                    {
                        "name": "artist",
                        "in": "path",
                        "description": "Artist ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Artist permanently deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Artist permanently deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Artist not found"
                    },
                    "422": {
                        "description": "Active record cannot be force deleted"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/artists/{artist}/profile-photo": {
            "delete": {
                "tags": [
                    "Artist"
                ],
                "summary": "Remove the artist's profile photo",
                "operationId": "19150486df4774aec43bd2654ca5c3e9",
                "parameters": [
                    {
                        "name": "artist",
                        "in": "path",
                        "description": "Artist ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Profile photo removed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Profile photo removed successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No profile photo found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No profile photo found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Cannot delete profile photo"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/roles": {
            "get": {
                "tags": [
                    "Role"
                ],
                "summary": "Display a listing of roles",
                "operationId": "a250b4e6aa478949d06fb6e7fa1d7ef6",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    },
                    {
                        "name": "guard",
                        "in": "query",
                        "description": "Guard name to filter roles",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "api",
                            "enum": [
                                "api",
                                "admin"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RoleCollection"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/upload/temp": {
            "post": {
                "tags": [
                    "Upload"
                ],
                "summary": "Store a temporary file",
                "operationId": "84d71c9241c3205151e17076b62f1e47",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "file"
                                ],
                                "properties": {
                                    "file": {
                                        "description": "The file to upload (jpg, jpeg, png, webp, max 10MB)",
                                        "type": "string",
                                        "format": "binary",
                                        "example": "profile_photo.jpg"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "File uploaded successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TempFolderResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "File upload failed"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Internal server error details"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/users": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Display a listing of users",
                "operationId": "58e3fdbd4969eca81ac41819a77e2136",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserCollection"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Store a newly created user",
                "operationId": "e2769f6532a4574b9581dd12cad0dae4",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "john.doe@company.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password123"
                                    },
                                    "role_id": {
                                        "description": "Optional role ID to assign to the user",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "temp_folder": {
                                        "description": "Optional temporary folder name from FilePond upload",
                                        "type": "string",
                                        "example": "uuid-string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResource"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/users/{user}": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Display the specified user",
                "operationId": "e2ec4b6fac811ac7b6e9c13e35590a92",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResource"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Update the specified user",
                "operationId": "e38af4a3cc354948bf5719d5f94c13e4",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "john.doe@company.com"
                                    },
                                    "password": {
                                        "description": "Optional new password - leave blank to keep current password",
                                        "type": "string",
                                        "example": "newpassword123"
                                    },
                                    "role_id": {
                                        "description": "Optional role ID to assign to the user",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "temp_folder": {
                                        "description": "Optional temporary folder name from FilePond upload",
                                        "type": "string",
                                        "example": "uuid-string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResource"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "User"
                ],
                "summary": "Delete the specified user",
                "operationId": "9218d5b37265635cc1fd8b6e75221d9d",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/users/{user}/restore": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Restore the specified soft-deleted user",
                "operationId": "898485ee822e98b90a208968df427d5b",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User restored",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User restored"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/UserResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/users/{user}/force-delete": {
            "delete": {
                "tags": [
                    "User"
                ],
                "summary": "Permanently delete the specified user",
                "operationId": "dc8d56ca1c12299d1944972a4b2c449a",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User permanently deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User permanently deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "422": {
                        "description": "Active record cannot be force deleted"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/users/{user}/profile-photo": {
            "delete": {
                "tags": [
                    "User"
                ],
                "summary": "Remove the user's profile photo",
                "operationId": "5050ec42b6863350842236d3e4215bf4",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Profile photo removed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Profile photo removed successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No profile photo found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No profile photo found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Cannot delete profile photo"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/users/{user}/send-password-reset": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Send password reset link to user",
                "operationId": "ef44fd7fea95d99bc9377647e8ee143e",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Password reset link sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Password reset link sent successfully"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Cannot send password reset"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "AdminIndexRequest": {
                "title": "Admin Index Request",
                "description": "Query parameters for listing admins",
                "properties": {
                    "page": {
                        "type": "integer",
                        "minimum": 1,
                        "example": 1
                    },
                    "per_page": {
                        "type": "integer",
                        "maximum": 100,
                        "minimum": 1,
                        "example": 15
                    },
                    "search": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "john"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "verified",
                            "pending"
                        ],
                        "example": "verified"
                    },
                    "sort_by": {
                        "type": "string",
                        "enum": [
                            "name",
                            "email",
                            "created_at",
                            "updated_at"
                        ],
                        "example": "name"
                    },
                    "sort_direction": {
                        "type": "string",
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "example": "asc"
                    },
                    "with_inactive": {
                        "type": "boolean",
                        "example": false
                    },
                    "only_inactive": {
                        "type": "boolean",
                        "example": false
                    }
                },
                "type": "object"
            },
            "AdminStoreRequest": {
                "title": "Admin Store Request",
                "description": "Request data for creating a new admin",
                "required": [
                    "name",
                    "email",
                    "password"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "maxLength": 255,
                        "example": "john.doe@example.com"
                    },
                    "password": {
                        "type": "string",
                        "minLength": 8,
                        "example": "password123"
                    },
                    "role_id": {
                        "type": "integer",
                        "example": 1,
                        "nullable": true
                    },
                    "temp_folder": {
                        "type": "string",
                        "example": "temp_uploads_123",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "AdminUpdateRequest": {
                "title": "Admin Update Request",
                "description": "Request data for updating an existing admin",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "maxLength": 255,
                        "example": "john.doe@example.com"
                    },
                    "password": {
                        "type": "string",
                        "minLength": 8,
                        "example": "password123"
                    },
                    "password_confirmation": {
                        "type": "string",
                        "example": "password123"
                    },
                    "role_id": {
                        "type": "integer",
                        "example": 1,
                        "nullable": true
                    },
                    "temp_folder": {
                        "type": "string",
                        "example": "temp_uploads_123",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "AdminCollection": {
                "title": "Admin Collection",
                "description": "Admin collection resource",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AdminResource"
                        }
                    },
                    "links": {
                        "properties": {
                            "first": {
                                "type": "string",
                                "example": "http://localhost/api/v1/admins?page=1"
                            },
                            "last": {
                                "type": "string",
                                "example": "http://localhost/api/v1/admins?page=2"
                            },
                            "prev": {
                                "type": "string",
                                "example": "http://localhost/api/v1/admins?page=1"
                            },
                            "next": {
                                "type": "string",
                                "example": "http://localhost/api/v1/admins?page=2"
                            }
                        },
                        "type": "object"
                    },
                    "meta": {
                        "properties": {
                            "current_page": {
                                "type": "integer",
                                "example": 1
                            },
                            "from": {
                                "type": "integer",
                                "example": 1
                            },
                            "last_page": {
                                "type": "integer",
                                "example": 2
                            },
                            "links": {
                                "type": "array",
                                "items": {
                                    "properties": {
                                        "url": {
                                            "type": "string",
                                            "example": "http://localhost/api/v1/admins?page=1"
                                        },
                                        "label": {
                                            "type": "string",
                                            "example": "1"
                                        },
                                        "active": {
                                            "type": "boolean",
                                            "example": true
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "path": {
                                "type": "string",
                                "example": "http://localhost/api/v1/admins"
                            },
                            "per_page": {
                                "type": "integer",
                                "example": 15
                            },
                            "to": {
                                "type": "integer",
                                "example": 15
                            },
                            "total": {
                                "type": "integer",
                                "example": 30
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "AdminResource": {
                "title": "Admin Resource",
                "description": "Admin resource representation",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "example": "john.doe@mail.com"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RoleResource"
                        },
                        "nullable": true
                    },
                    "permissions": {
                        "description": "All permissions the admin has through their roles",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PermissionResource"
                        },
                        "nullable": true
                    },
                    "profile_photo": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/AdminProfilePhotoResource"
                            }
                        ],
                        "nullable": true,
                        "description": "Admin's profile photo information"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2021-01-01 12:00:00",
                        "nullable": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2021-01-01 12:00:00",
                        "nullable": true
                    },
                    "deleted_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "null",
                        "nullable": true
                    },
                    "restored_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "null",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "AdminProfilePhotoResource": {
                "title": "Admin Profile Photo Resource",
                "description": "Admin profile photo information for FilePond integration",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "url": {
                        "type": "string",
                        "example": "/storage/admins/48/profile_photo/profile_photo_1756599663.jpg"
                    },
                    "name": {
                        "type": "string",
                        "example": "profile_photo_1756599663.jpg"
                    },
                    "size": {
                        "type": "integer",
                        "example": 12345
                    },
                    "mime_type": {
                        "type": "string",
                        "example": "image/jpeg"
                    }
                },
                "type": "object"
            },
            "ArtistCollection": {
                "title": "Artist Collection",
                "description": "Artist collection resource",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ArtistResource"
                        }
                    },
                    "links": {
                        "properties": {
                            "first": {
                                "type": "string",
                                "example": "http://localhost/api/v1/artists?page=1"
                            },
                            "last": {
                                "type": "string",
                                "example": "http://localhost/api/v1/artists?page=2"
                            },
                            "prev": {
                                "type": "string",
                                "example": "http://localhost/api/v1/artists?page=1"
                            },
                            "next": {
                                "type": "string",
                                "example": "http://localhost/api/v1/artists?page=2"
                            }
                        },
                        "type": "object"
                    },
                    "meta": {
                        "properties": {
                            "current_page": {
                                "type": "integer",
                                "example": 1
                            },
                            "from": {
                                "type": "integer",
                                "example": 1
                            },
                            "last_page": {
                                "type": "integer",
                                "example": 2
                            },
                            "links": {
                                "type": "array",
                                "items": {
                                    "properties": {
                                        "url": {
                                            "type": "string",
                                            "example": "http://localhost/api/v1/artists?page=1"
                                        },
                                        "label": {
                                            "type": "string",
                                            "example": "1"
                                        },
                                        "active": {
                                            "type": "boolean",
                                            "example": true
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "path": {
                                "type": "string",
                                "example": "http://localhost/api/v1/artists"
                            },
                            "per_page": {
                                "type": "integer",
                                "example": 15
                            },
                            "to": {
                                "type": "integer",
                                "example": 15
                            },
                            "total": {
                                "type": "integer",
                                "example": 30
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "ArtistResource": {
                "title": "Artist Resource",
                "description": "Artist resource representation",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "spotify_id": {
                        "type": "string",
                        "example": "0TnOYISbd1XYRBk9myaseg",
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "example": "Radiohead"
                    },
                    "owner": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/UserResource"
                            }
                        ],
                        "nullable": true,
                        "description": "The user who owns this artist"
                    },
                    "profile_photo": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/ProfilePhotoResource"
                            }
                        ],
                        "nullable": true,
                        "description": "Artist's profile photo information"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2021-01-01 12:00:00",
                        "nullable": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2021-01-01 12:00:00",
                        "nullable": true
                    },
                    "deleted_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2021-01-01 12:00:00",
                        "nullable": true
                    },
                    "restored_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2021-01-01 12:00:00",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "PermissionCollection": {
                "title": "Permission Collection",
                "description": "Permission collection resource",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PermissionResource"
                        }
                    },
                    "links": {
                        "properties": {
                            "first": {
                                "type": "string",
                                "example": "http://localhost/api/v1/permissions?page=1"
                            },
                            "last": {
                                "type": "string",
                                "example": "http://localhost/api/v1/permissions?page=2"
                            },
                            "prev": {
                                "type": "string",
                                "example": "http://localhost/api/v1/permissions?page=1"
                            },
                            "next": {
                                "type": "string",
                                "example": "http://localhost/api/v1/permissions?page=2"
                            }
                        },
                        "type": "object"
                    },
                    "meta": {
                        "properties": {
                            "current_page": {
                                "type": "integer",
                                "example": 1
                            },
                            "from": {
                                "type": "integer",
                                "example": 1
                            },
                            "last_page": {
                                "type": "integer",
                                "example": 2
                            },
                            "links": {
                                "type": "array",
                                "items": {
                                    "properties": {
                                        "url": {
                                            "type": "string",
                                            "example": "http://localhost/api/v1/permissions?page=1"
                                        },
                                        "label": {
                                            "type": "string",
                                            "example": "1"
                                        },
                                        "active": {
                                            "type": "boolean",
                                            "example": true
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "path": {
                                "type": "string",
                                "example": "http://localhost/api/v1/permissions"
                            },
                            "per_page": {
                                "type": "integer",
                                "example": 15
                            },
                            "to": {
                                "type": "integer",
                                "example": 15
                            },
                            "total": {
                                "type": "integer",
                                "example": 30
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "PermissionResource": {
                "title": "Permission Resource",
                "description": "Permission resource representation",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "create-users"
                    },
                    "guard_name": {
                        "type": "string",
                        "example": "web"
                    }
                },
                "type": "object"
            },
            "RoleCollection": {
                "title": "Role Collection",
                "description": "Role collection resource",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RoleResource"
                        }
                    },
                    "links": {
                        "properties": {
                            "first": {
                                "type": "string",
                                "example": "http://localhost/api/v1/roles?page=1"
                            },
                            "last": {
                                "type": "string",
                                "example": "http://localhost/api/v1/roles?page=2"
                            },
                            "prev": {
                                "type": "string",
                                "example": "http://localhost/api/v1/roles?page=1"
                            },
                            "next": {
                                "type": "string",
                                "example": "http://localhost/api/v1/roles?page=2"
                            }
                        },
                        "type": "object"
                    },
                    "meta": {
                        "properties": {
                            "current_page": {
                                "type": "integer",
                                "example": 1
                            },
                            "from": {
                                "type": "integer",
                                "example": 1
                            },
                            "last_page": {
                                "type": "integer",
                                "example": 2
                            },
                            "links": {
                                "type": "array",
                                "items": {
                                    "properties": {
                                        "url": {
                                            "type": "string",
                                            "example": "http://localhost/api/v1/roles?page=1"
                                        },
                                        "label": {
                                            "type": "string",
                                            "example": "1"
                                        },
                                        "active": {
                                            "type": "boolean",
                                            "example": true
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "path": {
                                "type": "string",
                                "example": "http://localhost/api/v1/roles"
                            },
                            "per_page": {
                                "type": "integer",
                                "example": 15
                            },
                            "to": {
                                "type": "integer",
                                "example": 15
                            },
                            "total": {
                                "type": "integer",
                                "example": 30
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "RoleResource": {
                "title": "Role Resource",
                "description": "Role resource representation",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Admin"
                    },
                    "guard_name": {
                        "type": "string",
                        "example": "web"
                    },
                    "permissions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PermissionResource"
                        },
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "TempFolderResource": {
                "title": "Temp Folder Resource",
                "description": "Temporary file upload response",
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "folder": {
                        "type": "string",
                        "example": "temp_1234567890"
                    },
                    "filename": {
                        "type": "string",
                        "example": "profile_photo.jpg"
                    },
                    "size": {
                        "type": "integer",
                        "example": 12345
                    },
                    "uploaded_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-08-31T01:52:43.000000Z"
                    }
                },
                "type": "object"
            },
            "ProfilePhotoResource": {
                "title": "Profile Photo Resource",
                "description": "Profile photo information for FilePond integration",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "url": {
                        "type": "string",
                        "example": "/storage/users/48/profile_photo/profile_photo_1756599663.jpg"
                    },
                    "name": {
                        "type": "string",
                        "example": "profile_photo_1756599663.jpg"
                    },
                    "size": {
                        "type": "integer",
                        "example": 12345
                    },
                    "mime_type": {
                        "type": "string",
                        "example": "image/jpeg"
                    }
                },
                "type": "object"
            },
            "UserCollection": {
                "title": "User Collection",
                "description": "User collection resource",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserResource"
                        }
                    },
                    "links": {
                        "properties": {
                            "first": {
                                "type": "string",
                                "example": "http://localhost/api/v1/users?page=1"
                            },
                            "last": {
                                "type": "string",
                                "example": "http://localhost/api/v1/users?page=2"
                            },
                            "prev": {
                                "type": "string",
                                "example": "http://localhost/api/v1/users?page=1"
                            },
                            "next": {
                                "type": "string",
                                "example": "http://localhost/api/v1/users?page=2"
                            }
                        },
                        "type": "object"
                    },
                    "meta": {
                        "properties": {
                            "current_page": {
                                "type": "integer",
                                "example": 1
                            },
                            "from": {
                                "type": "integer",
                                "example": 1
                            },
                            "last_page": {
                                "type": "integer",
                                "example": 2
                            },
                            "links": {
                                "type": "array",
                                "items": {
                                    "properties": {
                                        "url": {
                                            "type": "string",
                                            "example": "http://localhost/api/v1/users?page=1"
                                        },
                                        "label": {
                                            "type": "string",
                                            "example": "1"
                                        },
                                        "active": {
                                            "type": "boolean",
                                            "example": true
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "path": {
                                "type": "string",
                                "example": "http://localhost/api/v1/users"
                            },
                            "per_page": {
                                "type": "integer",
                                "example": 15
                            },
                            "to": {
                                "type": "integer",
                                "example": 15
                            },
                            "total": {
                                "type": "integer",
                                "example": 30
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "UserResource": {
                "title": "User Resource",
                "description": "User resource representation",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "example": "john.doe@example.com"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RoleResource"
                        },
                        "nullable": true
                    },
                    "permissions": {
                        "description": "All permissions the user has through their roles",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PermissionResource"
                        },
                        "nullable": true
                    },
                    "profile_photo": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/ProfilePhotoResource"
                            }
                        ],
                        "nullable": true,
                        "description": "User's profile photo information"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2021-01-01 12:00:00",
                        "nullable": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2021-01-01 12:00:00",
                        "nullable": true
                    },
                    "deleted_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "null",
                        "nullable": true
                    },
                    "restored_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "null",
                        "nullable": true
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Admin",
            "description": "Admin management"
        },
        {
            "name": "Artist",
            "description": "Artist management"
        },
        {
            "name": "Role",
            "description": "Role management"
        },
        {
            "name": "User",
            "description": "User management"
        },
        {
            "name": "Upload",
            "description": "Upload"
        }
    ],
    "externalDocs": {
        "description": "Find out more about YourApp!",
        "url": "https://github.com/yourapp"
    }
}